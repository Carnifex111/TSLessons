{"ast":null,"code":"var _jsxFileName = \"/home/carnifex/CodeHome/TSLessons/22.React start/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const App = () => {\n//   //1\n//   const [count, setCount] = useState<number>(0);\n\n//   useEffect(() => {\n//     // Отрабатываю только тогда когда состояние count меняется!\n//     // и больше никогда!\n//     console.log(\"Значение count изменилось:\", count);\n//   }, [count]);\n\n//   //2\n//   const [countTwo, setCountTwo] = useState<number>(0);\n\n//   useEffect(() => {\n//     // Отрабатываю только тогда когда состояние countTwo меняется!\n//     // и больше никогда!\n//     console.log(\"Значение countTwo изменилось:\", countTwo);\n//   }, [countTwo]);\n\n//   const handleButtonClick = (setState: any, counter: any) => {\n//     setState(counter + 1);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <AppContextProvider>\n//         <ApiComponent />\n//         <Title />\n//       </AppContextProvider>\n\n//       <button onClick={() => handleButtonClick(setCount, count)}>\n//         Увеличить count\n//       </button>\n//       <button onClick={() => handleButtonClick(setCountTwo, countTwo)}>\n//         Увеличить countTwo\n//       </button>\n//       <h2>{count}</h2>\n//       <h2>{countTwo}</h2>\n//     </div>\n//   );\n// };\n// export default App;\nconst App = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const charOne = \"https://rickandmortyapi.com/api/character/1\";\n  const charTwo = \"https://rickandmortyapi.com/api/character/2\";\n  useEffect(() => {\n    console.log(`Состояние name изменилось на ${name}`);\n  }, [name]);\n  const getCharacter = url => {\n    fetch(url).then(response => response.json()).then(data => {\n      const fetchedName = data.name;\n      setName(fetchedName);\n    }).catch(error => {\n      console.log(\"Error fetching character data:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getCharacter(charOne),\n      children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043F\\u0435\\u0440\\u0432\\u043E\\u0433\\u043E \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u0436\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getCharacter(charTwo),\n      children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043F\\u0435\\u0440\\u0432\\u043E\\u0433\\u043E \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u0436\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u0436 \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yFX/thdr3dMdWKRwvTuphhEy2lc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","name","setName","charOne","charTwo","console","log","getCharacter","url","fetch","then","response","json","data","fetchedName","catch","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/carnifex/CodeHome/TSLessons/22.React start/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport ApiComponent from \"./components/api-component\";\nimport Title from \"./components/title\";\nimport AppContextProvider from \"./context/AppContextProvider\";\n\n// const App = () => {\n//   //1\n//   const [count, setCount] = useState<number>(0);\n\n//   useEffect(() => {\n//     // Отрабатываю только тогда когда состояние count меняется!\n//     // и больше никогда!\n//     console.log(\"Значение count изменилось:\", count);\n//   }, [count]);\n\n//   //2\n//   const [countTwo, setCountTwo] = useState<number>(0);\n\n//   useEffect(() => {\n//     // Отрабатываю только тогда когда состояние countTwo меняется!\n//     // и больше никогда!\n//     console.log(\"Значение countTwo изменилось:\", countTwo);\n//   }, [countTwo]);\n\n//   const handleButtonClick = (setState: any, counter: any) => {\n//     setState(counter + 1);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <AppContextProvider>\n//         <ApiComponent />\n//         <Title />\n//       </AppContextProvider>\n\n//       <button onClick={() => handleButtonClick(setCount, count)}>\n//         Увеличить count\n//       </button>\n//       <button onClick={() => handleButtonClick(setCountTwo, countTwo)}>\n//         Увеличить countTwo\n//       </button>\n//       <h2>{count}</h2>\n//       <h2>{countTwo}</h2>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nconst App = () => {\n  const [name, setName] = useState<string>(\"\");\n\n  const charOne: string = \"https://rickandmortyapi.com/api/character/1\";\n  const charTwo: string = \"https://rickandmortyapi.com/api/character/2\";\n\n  useEffect(() => {\n    console.log(`Состояние name изменилось на ${name}`);\n  }, [name]);\n\n  const getCharacter = (url: string) => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        const fetchedName = data.name;\n        setName(fetchedName);\n      })\n      .catch((error) => {\n        console.log(\"Error fetching character data:\", error);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={() => getCharacter(charOne)}>\n        Получить первого персонажа\n      </button>\n      <button onClick={() => getCharacter(charTwo)}>\n        Получить первого персонажа\n      </button>\n      <h1>Персонаж {name}</h1>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAE5C,MAAMO,OAAe,GAAG,6CAA6C;EACrE,MAAMC,OAAe,GAAG,6CAA6C;EAErET,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAE,gCAA+BL,IAAK,EAAC,CAAC;EACrD,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMM,YAAY,GAAIC,GAAW,IAAK;IACpCC,KAAK,CAACD,GAAG,CAAC,CACPE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,WAAW,GAAGD,IAAI,CAACZ,IAAI;MAC7BC,OAAO,CAACY,WAAW,CAAC;IACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBX,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEU,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAACJ,OAAO,CAAE;MAAAe,QAAA,EAAC;IAE9C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTzB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAACH,OAAO,CAAE;MAAAc,QAAA,EAAC;IAE9C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTzB,OAAA;MAAAoB,QAAA,GAAI,mDAAS,EAACjB,IAAI;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAACvB,EAAA,CAjCID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}